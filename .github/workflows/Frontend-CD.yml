name: CD

# 배포 파이프라인을 main, develop 브랜치에서 트리거합니다.
on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 레포지토리 체크아웃
      - uses: actions/checkout@v4

      # Node.js 환경 설정
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Sentry 인증 토큰 설정
      - name: Set Sentry Authentication Token
        run: echo "SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}" >> $GITHUB_ENV

      # 의존성 설치
      - name: Install dependencies
        run: yarn install --frozen-lockfile

      # Docker Buildx 설정
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Docker Hub 로그인
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Docker 이미지 빌드 및 푸시
      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/grouphi-mvp-fe:${{ github.sha }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/grouphi-mvp-fe:${{ github.sha }}

      # Docker 컨테이너로 테스트
      - name: Run container and test
        run: |
          docker run -d -p 3000:3000 --name test-container ${{ secrets.DOCKER_USERNAME }}/grouphi-mvp-fe:${{ github.sha }}
          sleep 10
          curl http://localhost:3000 || exit 1
          docker stop test-container
          docker rm test-container

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # 레포지토리 체크아웃
      - uses: actions/checkout@v4

      # Vercel CLI 설치
      - name: Install Vercel CLI
        run: npm install -g vercel

      # Vercel 배포
      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          echo "Deploying the application to personal repository..."
          DEPLOY_URL=$(vercel deploy --prod --token $VERCEL_TOKEN --scope joyswim --yes)
          echo "Deployed at: $DEPLOY_URL"
